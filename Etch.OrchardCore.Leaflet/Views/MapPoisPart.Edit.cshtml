@using Etch.OrchardCore.Leaflet.Models;
@using Etch.OrchardCore.Leaflet.Utils;
@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;
@using OrchardCore.ContentManagement.Display;
@using OrchardCore.ContentManagement.Metadata;
@using OrchardCore.ContentManagement.Metadata.Settings;
@using OrchardCore.Mvc.Utilities;

@model Etch.OrchardCore.Leaflet.ViewModels.MapPoisEditViewModel

@inject IContentManager ContentManager
@inject IContentDefinitionManager ContentDefinitionManager
@inject IContentItemDisplayManager ContentItemDisplayManager

@{
    var htmlFieldPrefix = ViewContext.ViewData.TemplateInfo.HtmlFieldPrefix;
    var poiTemplatePlaceholderId = Html.Id("poiTemplatePlaceholderId");
    var poiContentTypes = ContentDefinitionManager.ListTypeDefinitions().Where(t => t.Parts.Any(x => x.Name.Equals(nameof(PoiPart))));
    var parentContentType = Model.ContentItem.ContentType;
    var map = Model.ContentItem.As<Map>();


    string partName = ((dynamic)Model).Metadata.Name;
}

<script asp-src="~/Etch.OrchardCore.Leaflet/Scripts/admin.js" depends-on="admin, jquery" at="Foot" asp-append-version="true"></script>
<script asp-name="jQuery-ui" at="Foot"></script>

@if (!Model.HasTiles)
{
    <p class="alert alert-warning">@T["Unable to add POIs until map tiles has been chosen."]</p>
}

@if (Model.HasTiles)
{
    <style asp-src="~/Etch.OrchardCore.Leaflet/Styles/admin.css" at="Head" asp-append-version="true"></style>

    <script at="Foot">
        window.initializeMap({ 
            domId: 'map', 
            draggableMarkers: true, 
            height: @Model.Height, 
            initialZoom: @map.InitialZoom, 
            maxZoom: @map.MaxZoom,
            minZoom: @map.MinZoom,
            mouseWheelZoom: false,
            pois: '@Html.Raw(PoiUtils.Serialize(Model.Markers))', 
            tileRoot: '@Model.TileRoot', 
            width: @Model.Width, 
            zoomControlPosition: 'topleft' });
    </script>

    <div class="leaflet leaflet--admin">
        <div id="map"></div>
    </div>

    <div class="mb-3">
        <h3>@T["POIs"]</h3>

        <p class="hint">@T["Click on map to add new POI."]</p>

        <div id="@poiTemplatePlaceholderId" class="widget-template-placeholder widget-template-placeholder-bagpart bagpart-@partName.HtmlClassify() row mx-0" data-buildeditorurl="@Url.Action("BuildEditor", "Admin", new { area = "Etch.OrchardCore.Leaflet" })">
            @foreach (var poi in Model.MapPoisPart.ContentItems)
            {
                var index = 0;

                //Create a Card Shape
                dynamic contentCard = await New.ContentCard(
                    // FOR Updater
                    CollectionShape: Model,
                    //Shape Specific
                    CollectionShapeType: nameof(MapPoisPart),
                    ContentItem: poi,
                    BuildEditor: true,
                    ParentContentType: parentContentType,
                    CollectionPartName: partName,
                    //Card Specific Properties
                    TargetId: poiContentTypes,
                    Inline: false,
                    CanMove: false,
                    CanDelete: true,
                    //Input hidden
                    //Prefixes
                    PrefixValue: htmlFieldPrefix + '-' + (index++).ToString(),
                    HtmlFieldPrefix: htmlFieldPrefix,
                    PrefixesId: Html.IdFor(x => x.Prefixes),
                    PrefixesName: Html.NameFor(x => x.Prefixes),
                    //Content Types
                    ContentTypesId: Html.IdFor(x => x.ContentTypes),
                    ContentTypesName: Html.NameFor(x => x.ContentTypes),
                    ContentItemsId: Html.IdFor(x => x.ContentItems),
                    ContentItemsName: Html.NameFor(x => x.ContentItems)
                );

                @await DisplayAsync(contentCard)
            }
        </div>
    </div>

    @* Rendered only once in case multiple MapPoisPart are on the page *@
    @if (Context.Items["MapPoisPart.Edit"] == null)
    {
        Context.Items["MapPoisPart.Edit"] = new object();
        <script asp-src="~/OrchardCore.Flows/Scripts/flows.edit.min.js"
                debug-src="~/OrchardCore.Flows/Scripts/flows.edit.js" at="Foot" depends-on="admin"></script>
        <style asp-src="~/OrchardCore.Widgets/Styles/widgetslist.edit.min.css"
               debug-src="~/OrchardCore.Widgets/Styles/widgetslist.edit.css"></style>
        <style asp-src="~/OrchardCore.Flows/Styles/flows.edit.min.css"
               debug-src="~/OrchardCore.Flows/Styles/flows.edit.css"></style>
    }

    <div class="modal fade" id="modalPoiMarkers" tabindex="-1" role="dialog" aria-labelledby="poi-picker-label" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@T["Available POIs"]</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row row-cols-1 row-cols-md-3 g-2">
                        @foreach (var type in poiContentTypes)
                        {
                            <div class="col activity widget">
                                <div class="card h-100">
                                    <div class="card-body">
                                        <h4 class="card-title">@type.DisplayName.Replace("POI", "")</h4>
                                        <p>@type.Settings["Description"]</p>
                                    </div>
                                    <div class="card-footer text-muted text-sm-end">
                                        <button type="button"
                                                class="btn btn-primary btn-sm add-poi"
                                                data-target-id="@poiTemplatePlaceholderId"
                                                data-parent-content-type="@parentContentType"
                                                data-part-name="@partName"
                                                data-prefixes-name="@Html.NameFor(x => x.Prefixes)"
                                                data-contenttypes-name="@Html.NameFor(x => x.ContentTypes)"
                                                data-contentitems-name="@Html.NameFor(x => x.ContentItems)"
                                                data-widget-type="@type.Name"
                                                data-bs-dismiss="modal"
                                                href="javascript:;"
                                                data-icon-marker-path="@(type.Parts.SingleOrDefault(x => x.Name == nameof(PoiPart)).GetSettings<PoiPartSettings>().AdminMarkerIconPath)"
                                                data-icon-marker-height="@(type.Parts.SingleOrDefault(x => x.Name == nameof(PoiPart)).GetSettings<PoiPartSettings>().MarkerIconHeight)"
                                                data-icon-marker-width="@(type.Parts.SingleOrDefault(x => x.Name == nameof(PoiPart)).GetSettings<PoiPartSettings>().MarkerIconWidth)"
                                                data-icon-marker-zoom-ratio="@(type.Parts.SingleOrDefault(x => x.Name == nameof(PoiPart)).GetSettings<PoiPartSettings>().MarkerIconZoomRatio)">
                                            @T["Add"]
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@T["Cancel"]</button>
                </div>
            </div>
        </div>
    </div>
}

